1_1. 선언부
  CREATE OR REPLACE PACKAGE PK_OOE_ADMIN IS

  --#############################################################################
  -- PACKAGE  : PK_OOE_ADMIN
  -- 설    명 : 조직업적평가 ADMIN
  -- 작 성 자 : 정상기
  -- 작 성 일 : 2005-09-05
  --#############################################################################
   
   TYPE csr_kpi_list IS REF CURSOR ;
   
    --###########################################
    -- 테이블명 : TB_OOE_KPI_MST
    -- 설    명 :
    --###########################################  
    FUNCTION GET_KPI_LIST (
                 v_eval_yy       TB_OOE_OPPEVALER_MST.EVAL_YY%TYPE
                , v_oppevaler_fg  TB_OOE_OPPEVALER_MST.OPP_EVALER_FG%TYPE
                ) 
    RETURN csr_kpi_list ;  
    
    --###########################################
    -- 테이블명 : TB_OOE_TGT_PJT, TB_OOE_PJT_AIM_PLAN, TB_OOE_COMKPI_AIM_PLAN
    -- 설    명 : 월별 실적입력요청에 대한 실적입력상태 
    --########################################### 
    FUNCTION GET_MONTHLY_OUTPUT_INPUTSTAT(
                       v_eval_yy             TB_OOE_OPPEVALER_MST.EVAL_YY%TYPE             -- 평가년도
                      , v_oppevaler_org_cd    TB_OOE_OPPEVALER_MST.ORG_CD%TYPE              -- 피평가자 조직코드
                      , v_oppevaler_emp_no    TB_OOE_OPPEVALER_MST.OPP_EVALER_EMP_NO%TYPE   -- 피평가자 사원번호
                      , v_output_month        VARCHAR2                                      -- 실적월
                      , v_gubun               VARCHAR2                                      -- 구분자(입력상태/입력일자)
    )  
    RETURN VARCHAR2;
   
   
   ---------------------------------------------------------------------------------------------------------------------
   -- PROCEDURE --------------------------------------------------------------------------------------------------------
   ---------------------------------------------------------------------------------------------------------------------  
   
    --###########################################
    -- 테이블명 : TB_OOE_OPPEVALER_MST
    -- 설    명 :
    --###########################################  
    PROCEDURE SET_OPPEVALER (v_eval_yy IN TB_OOE_OPPEVALER_MST.EVAL_YY%TYPE) ;
    
   
    --###########################################
    -- 테이블명 : TB_OOE_OPPEVALER_KPI
    -- 설    명 : 피평가자 KPI 일괄등록
    --###########################################  
    PROCEDURE SET_OPPEVALERKPI_OVERALL_APPLY (
                  v_eval_year           IN  TB_OOE_OPPEVALER_KPI.EVAL_YY%TYPE
                 , v_oppevaler_fg        IN  TB_OOE_OPPEVALER_KPI.OPP_EVALER_FG%TYPE
                 , v_oppevaler_orgcd     IN  TB_OOE_OPPEVALER_KPI.ORG_CD%TYPE
                 , v_oppevaler_empno     IN  TB_OOE_OPPEVALER_KPI.EVALER_EMP_NO%TYPE
                 , v_reg_empno           IN  TB_OOE_OPPEVALER_KPI.REG_EMP_NO%TYPE
                 , v_basic_oppevaler_fg  IN  TB_OOE_OPPEVALER_KPI.OPP_EVALER_FG%TYPE
                 , v_rslt                OUT VARCHAR2
                 ) ;                                    
   
   
   
  END PK_OOE_ADMIN;
  /

1_2. 실행부
  CREATE OR REPLACE PACKAGE BODY PK_OOE_ADMIN is FUNCTION GET_KPI_LIST
  (
     v_eval_yy       TB_OOE_OPPEVALER_MST.EVAL_YY%TYPE         --  평가년도
    , v_oppevaler_fg  TB_OOE_OPPEVALER_MST.OPP_EVALER_FG%TYPE   --  피평가자 구분 
  )
  RETURN csr_kpi_list
  IS

  v_csr_kpi_list     csr_kpi_list                 ;
  v_rtn_fg           TB_OOE_OPPEVALER_MST.FG%TYPE ;
  v_func_fg          TB_MAN_EMP.FUNC_FG%TYPE      ;
  v_query            varchar2(1000)               ;
  v_search_sql       varchar2(1000)               ;
  c_cmt              constant              varchar2(200) := 'KPI 평가지표';

  v_tmp1             varchar2(100) := 'OOE02';
  v_tmp2             varchar2(100) := 'YYYY/MM/DD';
  v_tmp3             varchar2(100) := '2005';
  v_tmp4             varchar2(100) := '01';

  BEGIN

     v_query :=   ' SELECT   EVAL_YY            AS EvalYear
                , OPP_EVALER_FG
                , EVAL_YY||PK_OOE_COMMON.GET_OOE_COMM_NM(:CAT_CD, OPP_EVALER_FG)|| :c_cmt
                , TO_CHAR(REG_DATE,:YMD)
             FROM     TB_OOE_KPI_MST
             WHERE    EVAL_YY      = :v_eval_yy
             AND      EVAL_LEAD_FG = :EVAL_LEAD_FG ' ;
    
     IF v_oppevaler_fg <> 'ALL'
     THEN                                                       
      v_search_sql := ' AND OPP_EVALER_FG = ' || v_oppevaler_fg ;
     END IF;    
    
     /*IF v_oppevaler_fg <> 'ALL' THEN           
     
      SELECT   EVAL_YY
          , OPP_EVALER_FG
          , EVAL_YY||PK_OOE_COMMON.GET_OOE_COMM_NM('OOE02' , OPP_EVALER_FG)|| c_cmt
          , TO_CHAR(REG_DATE,'YYYY/MM/DD')
      INTO     csr_kpi_list
      FROM     TB_OOE_KPI_MST
      WHERE    EVAL_YY      = v_eval_yy
      AND      EVAL_LEAD_FG = '01'      
      AND      OPP_EVALER_FG = v_oppevaler_fg ;   
     ELSE

      SELECT PK_OOE_COMMON.GET_OOE_COMM_NM('OOE02' , OPP_EVALER_FG)
      FROM   TB_OOE_KPI_MST
      WHERE  EVAL_YY      = v_eval_yy
      AND    EVAL_LEAD_FG = '01' ;      
     
     END IF ;*/
     
     OPEN v_csr_kpi_list
     FOR v_query USING IN v_tmp1, IN c_cmt, IN v_tmp2, IN v_tmp3, IN v_tmp4;

     RETURN v_csr_kpi_list ;
     
  END GET_KPI_LIST ;

  FUNCTION GET_OPPEVALER_FG
  (
     v_eval_yy           TB_OOE_OPPEVALER_MST.EVAL_YY%TYPE             --  평가년도
    , v_oppevaler_emp_no  TB_OOE_OPPEVALER_MST.OPP_EVALER_EMP_NO%TYPE   --  피평가자 사원번호
  )
  RETURN VARCHAR2
  IS

  v_rtn_fg       TB_OOE_OPPEVALER_MST.FG%TYPE ;
  v_func_fg      TB_MAN_EMP.FUNC_FG%TYPE      ;

  BEGIN
     SELECT FUNC_FG
     INTO   v_func_fg
     FROM   TB_MAN_EMP
     WHERE  EMP_NO = v_oppevaler_emp_no ;
     
     
     IF v_func_fg = 'CT' THEN           -- CTO
      v_rtn_fg := '01' ;
     ELSIF v_func_fg = 'DL' THEN        -- 원장
      v_rtn_fg := '02' ;     
     ELSIF v_func_fg = 'RL' THEN        -- 연구소장                
      v_rtn_fg := '03' ;     
     ELSE
      v_rtn_fg := '04' ;     
     END IF ;
     
     RETURN v_rtn_fg ;
     
  END GET_OPPEVALER_FG ;


  --###########################################
  -- 테이블명 : TB_OOE_TGT_PJT, TB_OOE_PJT_AIM_PLAN, TB_OOE_COMKPI_AIM_PLAN
  -- 설    명 : 월별 실적입력요청에 대한 실적입력상태 
  -- 구 분 자 : v_gubun : INPUT_STAT, INPUT_DT
  --########################################### 
  FUNCTION GET_MONTHLY_OUTPUT_INPUTSTAT(
                       v_eval_yy             TB_OOE_OPPEVALER_MST.EVAL_YY%TYPE             -- 평가년도
                      , v_oppevaler_org_cd    TB_OOE_OPPEVALER_MST.ORG_CD%TYPE              -- 피평가자 조직코드
                      , v_oppevaler_emp_no    TB_OOE_OPPEVALER_MST.OPP_EVALER_EMP_NO%TYPE   -- 피평가자 사원번호
                      , v_output_month        VARCHAR2                                      -- 실적월
                      , v_gubun               VARCHAR2                                      -- 구분자(입력상태/입력일자)
  ) RETURN VARCHAR2
  IS

  l_core_kpi_cnt    NUMBER(5)    := 0;
  l_com_kpi_cnt     NUMBER(5)    := 0;

  l_core_kpi_regdt TB_OOE_PJT_AIM_PLAN.REG_DATE%TYPE;
  l_com_kpi_regdt  TB_OOE_PJT_AIM_PLAN.REG_DATE%TYPE;

  c_aim_fg         CONSTANT VARCHAR2(5) := '01';   -- 목표 : 목표실적달성율 구분자
  c_output_fg      CONSTANT VARCHAR2(5) := '02';   -- 실적 : 목표실적달성율 구분자

  c_input_stat     CONSTANT VARCHAR2(20) := 'INPUT_STAT';    -- 입력상태 : 구분자
  c_input_dt       CONSTANT VARCHAR2(20) := 'INPUT_DT';      -- 입력일자 : 구분자

  l_rtn            VARCHAR2(20)          := '';

  BEGIN

     SELECT COUNT(PJT_CD)
     INTO   l_core_kpi_cnt
     FROM   TB_OOE_PJT_AIM_PLAN
     WHERE  EVAL_YY              = v_eval_yy
     AND    ORG_CD               = v_oppevaler_org_cd
     AND    OPP_EVALER_EMP_NO    = v_oppevaler_emp_no
     AND    AIM_OUTPUT_ATTAIN_FG = c_output_fg
     AND    DECODE(v_output_month,'01',JAN,'02',FEB,'03',MAR,'04',APR,'05',MAY,'06',JUN
                   ,'07',JUL,'08',AUG,'09',SEP,'10',OCT,'11',NOV,'12',DEC)
                   IS NOT NULL
     AND    DGR                  = (SELECT MAX(DGR)
                    FROM   TB_OOE_PJT_AIM_PLAN
                    WHERE  EVAL_YY              = v_eval_yy
                    AND    ORG_CD               = v_oppevaler_org_cd
                    AND    OPP_EVALER_EMP_NO    = v_oppevaler_emp_no
                    AND    AIM_OUTPUT_ATTAIN_FG = c_aim_fg)
     ;
     
     SELECT COUNT(EVAL_ITEM_CD)
     INTO   l_com_kpi_cnt   
     FROM   TB_OOE_COMKPI_AIM_PLAN
     WHERE  EVAL_YY              = v_eval_yy
     AND    ORG_CD               = v_oppevaler_org_cd
     AND    OPP_EVALER_EMP_NO    = v_oppevaler_emp_no
     AND    AIM_OUTPUT_ATTAIN_FG = c_output_fg
     AND    DECODE(v_output_month,'01',JAN,'02',FEB,'03',MAR,'04',APR,'05',MAY,'06',JUN
                   ,'07',JUL,'08',AUG,'09',SEP,'10',OCT,'11',NOV,'12',DEC)
                   IS NOT NULL     
     AND    DGR                  = (SELECT MAX(DGR)
                    FROM   TB_OOE_COMKPI_AIM_PLAN
                    WHERE  EVAL_YY              = v_eval_yy
                    AND    ORG_CD               = v_oppevaler_org_cd
                    AND    OPP_EVALER_EMP_NO    = v_oppevaler_emp_no
                    AND    AIM_OUTPUT_ATTAIN_FG = c_aim_fg)
     ;
     
     SELECT MAX(REG_DATE)
     INTO   l_core_kpi_regdt
     FROM   TB_OOE_PJT_AIM_PLAN
     WHERE  EVAL_YY              = v_eval_yy
     AND    ORG_CD               = v_oppevaler_org_cd
     AND    OPP_EVALER_EMP_NO    = v_oppevaler_emp_no
     AND    AIM_OUTPUT_ATTAIN_FG = c_output_fg
     AND    DECODE(v_output_month,'01',JAN,'02',FEB,'03',MAR,'04',APR,'05',MAY,'06',JUN
                   ,'07',JUL,'08',AUG,'09',SEP,'10',OCT,'11',NOV,'12',DEC)
                   IS NOT NULL
     AND    DGR                  = (SELECT MAX(DGR)
                    FROM   TB_OOE_PJT_AIM_PLAN
                    WHERE  EVAL_YY              = v_eval_yy
                    AND    ORG_CD               = v_oppevaler_org_cd
                    AND    OPP_EVALER_EMP_NO    = v_oppevaler_emp_no
                    AND    AIM_OUTPUT_ATTAIN_FG = c_aim_fg)
     ;     
     
     SELECT MAX(REG_DATE)
     INTO   l_com_kpi_regdt   
     FROM   TB_OOE_COMKPI_AIM_PLAN
     WHERE  EVAL_YY              = v_eval_yy
     AND    ORG_CD               = v_oppevaler_org_cd
     AND    OPP_EVALER_EMP_NO    = v_oppevaler_emp_no
     AND    AIM_OUTPUT_ATTAIN_FG = c_output_fg
     AND    DECODE(v_output_month,'01',JAN,'02',FEB,'03',MAR,'04',APR,'05',MAY,'06',JUN
                   ,'07',JUL,'08',AUG,'09',SEP,'10',OCT,'11',NOV,'12',DEC)
                   IS NOT NULL     
     AND    DGR                  = (SELECT MAX(DGR)
                    FROM   TB_OOE_COMKPI_AIM_PLAN
                    WHERE  EVAL_YY              = v_eval_yy
                    AND    ORG_CD               = v_oppevaler_org_cd
                    AND    OPP_EVALER_EMP_NO    = v_oppevaler_emp_no
                    AND    AIM_OUTPUT_ATTAIN_FG = c_aim_fg)
     ;     
     
     IF v_gubun = c_input_stat THEN        -- 입력상태
      
      IF l_core_kpi_cnt>0 AND l_com_kpi_cnt>0 THEN
        l_rtn := '입력완료';
      ELSIF l_core_kpi_cnt=0 AND l_com_kpi_cnt=0 THEN
        l_rtn := '미입력';
      ELSIF l_core_kpi_cnt>0 OR l_com_kpi_cnt>0 THEN
        l_rtn := '입력중';
      ELSE
        l_rtn := '';
      END IF;
     
     ELSIF v_gubun = c_input_dt THEN       -- 입력일자
     
      IF l_core_kpi_cnt=0 AND l_com_kpi_cnt=0 THEN
        l_rtn := '';
      ELSIF l_core_kpi_cnt>0 OR l_com_kpi_cnt>0 THEN
        if l_core_kpi_regdt > l_com_kpi_regdt then
          l_rtn := l_core_kpi_regdt;
        else
          l_rtn := l_com_kpi_regdt;
        end if;
      ELSE
        l_rtn := '';
      END IF;     
     
     ELSE
       l_rtn := '';
     END IF;
     
     
     RETURN l_rtn;
     

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
       RETURN '';
    WHEN OTHERS THEN
       RETURN '';

  END GET_MONTHLY_OUTPUT_INPUTSTAT;
    
    
    
    
   ---------------------------------------------------------------------------------------------------------------------
   -- PROCEDURE --------------------------------------------------------------------------------------------------------
   ---------------------------------------------------------------------------------------------------------------------     
    
  --##############################################
  --                      
  -- 조직업적마스터 기본정보 INSERT or UPDATE
  --
  --##############################################
  PROCEDURE SET_OOE_MST
  (
    v_eval_yy IN TB_OOE_OPPEVALER_MST.EVAL_YY%TYPE             --  평가년도
  )
  IS


  BEGIN

   DELETE FROM TB_OOE_MST WHERE EVAL_YY = 'v_eval_yy' ;
   INSERT INTO TB_OOE_MST (EVAL_YY, FG) VALUES(v_eval_yy, '00000') ;
   
   --COMMIT ;
   null;
                

  END ;

  --##############################################
  --                      
  -- 피평가자테이블에 피평가자 INSERT or UPDATE
  --
  --##############################################
  PROCEDURE SET_OPPEVALER
  (
    v_eval_yy IN TB_OOE_OPPEVALER_MST.EVAL_YY%TYPE             --  평가년도
  )
  IS

    e_app_err       EXCEPTION;
    v_cnt           NUMBER(6)    := 0;
    v_oppevaler_emp_no TB_MAN_EMP.EMP_NO%TYPE ;
    v_fg            TB_OOE_OPPEVALER_MST.FG%TYPE ;
    
    v_msg           varchar2(500) ;    
    cnt number := 0 ;
    
    v_oppevaler_info TB_MAN_EMP%ROWTYPE ;

    ------------------------------------------------------------------------------------------------------------
    --  
    ------------------------------------------------------------------------------------------------------------
    CURSOR cur_oppevaler_emp_no IS   
    SELECT EMP_NO 
    FROM   TB_MAN_EMP 
    WHERE  POSITION_FG LIKE 'A%'
    AND    USE_YN = 'Y' ; 

  BEGIN

    ---------------------------------------------
    --  조직업적마스터 기본정보 INSERT
    --  PARAMETER : 1 > 평가년도
    ---------------------------------------------    
    SET_OOE_MST(v_eval_yy);
    

    --FOR v_oppevaler_emp_no IN cur_oppevaler_emp_no LOOP 
    OPEN cur_oppevaler_emp_no ;
    
    LOOP
    
    cnt := cnt + 1;
    
    FETCH cur_oppevaler_emp_no INTO v_oppevaler_emp_no ;
    
    
    ---------------------------------------------
    --  GET 구분
    --  PARAMETER : 1 > 평가년도, 2 > 피평가자 사원번호
    ---------------------------------------------    
    v_fg := GET_OPPEVALER_FG(v_eval_yy, v_oppevaler_emp_no);
    
    SELECT *
    INTO   v_oppevaler_info
    FROM   TB_MAN_EMP
    WHERE  EMP_NO    = v_oppevaler_emp_no ;
    
    
    DBMS_OUTPUT.PUT_LINE(' v_eval_yy === ' || v_eval_yy );
    DBMS_OUTPUT.PUT_LINE(' v_fg === ' || v_fg );
    DBMS_OUTPUT.PUT_LINE(' v_oppevaler_emp_no === ' || v_oppevaler_emp_no );
    
      
    ---------------------------------------------
    --  TB_OOE_OPPEVALER
    ---------------------------------------------
      INSERT INTO TB_OOE_OPPEVALER_MST  (
                         EVAL_YY
                        , OPP_EVALER_FG
                        , OPP_EVALER_EMP_NO
                        , FG
                        , OPP_EVALER_CENTER_NM
                        , OPP_EVALER_LAB_NM
                        , OPP_EVALER_FUNC_NM
                        , REG_EMP_NO
                        , REG_DATE
                       )
      VALUES                            (
                         v_eval_yy
                        , v_fg
                        , v_oppevaler_emp_no
                        , '00000'
                        , '소속센터명'
                        , '소속연구소명'
                        , '직책명'
                        , '0123456789'
                        , SYSDATE        
                       ) ;
                       
      exit when cnt = 43;
      EXIT WHEN cur_oppevaler_emp_no%NOTFOUND ;
       
    END LOOP;
    v_msg  := ' ' ||  v_cnt || ' 건';
    
    CLOSE cur_oppevaler_emp_no ;
          

  COMMIT;

  EXCEPTION
    --WHEN  e_app_err  THEN
    --    ROLLBACK;
    WHEN  OTHERS  THEN
      v_msg  := '' || ' [실패]' || ' [' || SQLERRM || ']';
      ROLLBACK;
      
  END SET_OPPEVALER ;

 

 


   ---------------------------------------------------------------------------------------------------------------------
   -- PROCEDURE --------------------------------------------------------------------------------------------------------
   ---------------------------------------------------------------------------------------------------------------------

    --###########################################
    -- 테이블명 : TB_OOE_OPPEVALER_KPI
    -- 설    명 : 피평가자 KPI 일괄등록
    --###########################################  
  PROCEDURE SET_OPPEVALERKPI_OVERALL_APPLY 
  (
                  v_eval_year           IN  TB_OOE_OPPEVALER_KPI.EVAL_YY%TYPE
                 , v_oppevaler_fg        IN  TB_OOE_OPPEVALER_KPI.OPP_EVALER_FG%TYPE
                 , v_oppevaler_orgcd     IN  TB_OOE_OPPEVALER_KPI.ORG_CD%TYPE
                 , v_oppevaler_empno     IN  TB_OOE_OPPEVALER_KPI.EVALER_EMP_NO%TYPE
                 , v_reg_empno           IN  TB_OOE_OPPEVALER_KPI.REG_EMP_NO%TYPE
                 , v_basic_oppevaler_fg  IN  TB_OOE_OPPEVALER_KPI.OPP_EVALER_FG%TYPE
                 , v_rslt                OUT VARCHAR2
  )
  IS

  l_row_cnt   NUMBER(5) := 0;

  BEGIN

   SELECT COUNT(EVAL_ITEM_CD)
   INTO   l_row_cnt
   FROM   TB_OOE_OPPEVALER_KPI
   WHERE  EVAL_YY         = v_eval_year
   AND    ORG_CD          = v_oppevaler_orgcd
   AND    EVALER_EMP_NO   = v_oppevaler_empno;
   
   IF l_row_cnt > 0 THEN

     DELETE FROM TB_OOE_OPPEVALER_KPI
     WHERE  EVAL_YY         = v_eval_year
     AND    ORG_CD          = v_oppevaler_orgcd
     AND    EVALER_EMP_NO   = v_oppevaler_empno;

   END IF;

   INSERT INTO TB_OOE_OPPEVALER_KPI
         (  EVAL_YY
          , OPP_EVALER_FG
          , EVAL_ITEM_CD
          , EVAL_LEAD_FG
          , EVALER_EMP_NO
          , ORG_CD
          , EVAL_ITEM_LEVEL
          , UP_EVAL_ITEM_CD
          , PROD_PNTS
          , TECH_PNTS
          , REG_EMP_NO
          , REG_DATE
          )
      SELECT   EVAL_YY
         , v_oppevaler_fg
         , EVAL_ITEM_CD
         , EVAL_LEAD_FG
         , v_oppevaler_empno
         , v_oppevaler_orgcd
         , EVAL_ITEM_LEVEL
         , UP_EVAL_ITEM_CD
         , PROD_PNTS
         , TECH_PNTS
         , v_reg_empno
         , SYSDATE
      FROM     TB_OOE_KPI_MST
      WHERE    EVAL_YY       = v_eval_year
      AND      OPP_EVALER_FG = v_basic_oppevaler_fg
      AND      USE_YN        = 'Y'
      ORDER BY EVAL_ITEM_LEVEL ASC;
   
   v_rslt   := '1';
   
  EXCEPTION
   WHEN OTHERS THEN
      v_rslt := '0';

  END SET_OPPEVALERKPI_OVERALL_APPLY;

  END PK_OOE_ADMIN ;
  /

