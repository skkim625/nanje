0. 호출방법
- function 호출
SELECT top 30
'F' rowkey, /** 체크박스 */
wkey, /** 웹스키 */
'1' img, /** 이미지 */
db, /** 검색 DB */
pat_num, /** 특허번호 */
kc, /** 상태 */
pat_day, /** 특허일 */
ap, /** 출원인 */
ti, /** 발명의 명칭 */
upd_date /** 수정일자 */
FROM fn_pjt_sdi_list('IP200512-0006', 'L') 

1. 구조설명
  CREATE OR REPLACE FUNCTION function name 
   [(argument...)] 
  RETURN  datatype -- Datatype은 반환되는 값의 datatype입니다. 
  IS 
    [변수 선언 부분]
  BEGIN
   [PL/SQL Block]  -- PL/SQL 블록에는 적어도 한 개의 RETURN 문이 있어야 합니다. 
           -- PL/SQL Block은 함수가 수행할 내용을 정의한 몸체부분입니다.
  END;

2. 기본구조
  CREATE OR REPLACE FUNCTION FC_PJT_GETPJTNM ( 
   p_pjt_cd in TB_PJT_MST.PJT_CD%TYPE  -- 프로젝트 코드
  ) 
  RETURN VARCHAR2  -- 프로젝트 명  리턴
  IS
  /******************************************************************************
   함 수 명 : FC_PJT_GETPJTNM 
   설    명 : 특정 프로젝트의 명을 리턴
   작 성 자 : OOO
   작 성 일 : 2005-06-14 
  ******************************************************************************/
  l_pjt_nm  TB_PJT_MST.PJT_NM%TYPE := '';

  BEGIN
    SELECT PJT_NM
    INTO   l_pjt_nm
    FROM   TB_PJT_MST
    WHERE  PJT_CD   = p_pjt_cd;

    RETURN l_pjt_nm;

  EXCEPTION
    WHEN OTHERS THEN
      RETURN l_pjt_nm;

  END FC_PJT_GETPJTNM;
  /

3_1. IF
  CREATE OR REPLACE function FC_PJT_GETPJTNM2 (
   p_pjt_cd in TB_PJT_MST.PJT_CD%TYPE
  ) 
  RETURN varchar2 
  IS
    l_pjt_nm  TB_PJT_MST.PJT_NM%TYPE := '';
    l_pjt_nick_nm TB_PJT_MST.PJT_NICK_NM%TYPE :='';

  BEGIN
    SELECT PJT_NM, PJT_NICK_NM
    INTO   l_pjt_nm,l_pjt_nick_nm
    FROM   TB_PJT_MST
    WHERE  PJT_CD   = p_pjt_cd ;
    
    IF l_pjt_nm <> l_pjt_nick_nm THEN
      l_pjt_nm := l_pjt_nm || '(' || l_pjt_nick_nm || ')' ;
    END IF;
    RETURN l_pjt_nm;

  EXCEPTION
    WHEN OTHERS THEN
      RETURN l_pjt_nm;
  END FC_PJT_GETPJTNM2;
  /

3_2. IF
  CREATE OR REPLACE FUNCTION FC_PJT_GETORGCD (
   p_pjt_cd in TB_PJT_MST.PJT_CD%TYPE , p_type VARCHAR2 -- 프로젝트코드
  ) RETURN VARCHAR2                                      -- 프로젝트명리턴
  IS
   l_org_cd  TB_MAN_ORG.ORG_CD%TYPE := '';

  BEGIN
   IF p_type = 'CENTER' THEN
    SELECT CENTER_CD
    INTO   l_org_cd
    FROM   TB_PJT_MST
    WHERE  PJT_CD   = p_pjt_cd;
   ELSIF p_type = 'LAB' THEN    -- ELSE
    SELECT LAB_CD
    INTO   l_org_cd
    FROM   TB_PJT_MST
    WHERE  PJT_CD   = p_pjt_cd;
   END IF;
   RETURN l_org_cd;

   EXCEPTION
     WHEN OTHERS THEN
       RETURN l_org_cd;

  END FC_PJT_GETORGCD;
  /

4. CURSOR 
  CREATE OR REPLACE FUNCTION FC_PJT_GET_FNDLIST (
    p_pjt_cd    in TB_PJT_MST.PJT_CD%TYPE,        -- PJT 코드
    p_center_cd in TB_PJT_MST.CENTER_CD%TYPE,     -- 원센터코드
    p_mng_cd_fg in TB_PJT_MNG_CD.MNG_CD_FG%TYPE,  -- 관리코드구분
    p_mng_cd    in TB_PJT_MNG_CD.MNG_CD%TYPE      -- 관리코드
  )
  RETURN VARCHAR2
  IS
   v_result  VARCHAR2(5000) := '';

   CURSOR cur_sql IS
    SELECT Z.FUND_NM
       , nvl(Y.RATE,0)  RATE
     FROM TB_PJT_MST  X
       , TB_PJT_MNG_CD  Y
       , TB_MST_FUND  Z
     WHERE X.PJT_CD = Y.PJT_CD
      AND Y.MNG_CD = Z.FUND_CD
      AND X.CENTER_CD = Z.CENTER_CD
      AND X.PJT_CD = p_pjt_cd
      AND X.CENTER_CD = p_center_cd
      AND Y.MNG_CD_FG = p_mng_cd_fg
      AND Y.MNG_CD LIKE p_mng_cd || '%';

   BEGIN
    FOR v_cur IN cur_sql
    LOOP
      v_result := v_result || v_cur.FUND_NM || '(' || v_cur.RATE || ')';
    END LOOP;
    RETURN v_result;

   EXCEPTION
     WHEN OTHERS THEN
       RETURN v_result;

  END FC_PJT_GET_FNDLIST;
  /

  - function 사용예
  SELECT 
     T2.MNG_CD_FG,
     T2.MNG_CD,
     FC_PJT_GET_FNDLIST(T1.PJT_CD, T1.CENTER_CD, T2.MNG_CD_FG,'') AS FND_NM
  FROM 
     TB_PJT_MST T1,
     TB_PJT_MNG_CD T2
  WHERE 
     T1.PJT_CD = T2.PJT_CD
    AND T1.PJT_STAT_FG = 'C'
    AND T1.PJT_CD = 'SRE050AZD04'

  - 결과값
  FND,0AA,전사 공통(100)
  OBU,0AA,전사 공통(100)
  PRD,P1,

5. function 내 function사용
  CREATE OR REPLACE FUNCTION FC_BGT_SETMAN (
   v_bp_yy         TB_BGT_BP_EMP.BP_YY%TYPE,       -- 사업계획년도
   v_center_cd     TB_BGT_BP_EMP.CENTER_CD%TYPE,   -- 원/센터코드
   v_plan_fg       TB_BGT_BP_EMP.PLAN_FG%TYPE,     -- 계획구분
   v_dgr           TB_BGT_BP_EMP.DGR%TYPE,         -- 차수
   v_emp_no        TB_BGT_BP_EMP.EMP_NO%TYPE       -- 사번
  )
  RETURN VARCHAR2                                     -- 진급년도 리턴
  IS
   v_gr_cd         TB_BGT_BP_EMP.ORG_CD%TYPE       := '000000';     -- 그룹코드
   v_position_fg   TB_BGT_BP_EMP.POSITION_FG%TYPE  := '00000';      -- 직위구분
   v_rank_fg       TB_BGT_BP_EMP.RANK_FG%TYPE      := '00000';      -- 직급구분
   v_rank_y_cnt    TB_BGT_BP_EMP.RANK_Y_CNT%TYPE   := 0 ;           -- 직급년수
   v_ent_ymd       TB_BGT_BP_EMP.ENT_YMD%TYPE      := '00000000';   -- 입사일자
   v_retire_ymd    TB_BGT_BP_EMP.RETIRE_YMD%TYPE   := '00000000';   -- 퇴사일자
   v_called_y_cnt  TB_BGT_BP_EMP.CALLED_Y_CNT%TYPE := 0 ;           -- 호칭년수

   v_promote_year  VARCHAR2(4) := '9999';          -- 진급년도
   v_levelup_year  VARCHAR2(4) := '9999';          -- 진급년도

  BEGIN
    SELECT ORG_CD          ,                    -- 그룹코드
        POSITION_FG     ,                    -- 직위구분
        RANK_FG         ,                    -- 직급구분
        RANK_Y_CNT      ,                    -- 직급년수
        ENT_YMD         ,                    -- 입사일자
        RETIRE_YMD      ,                    -- 퇴사일자
        CALLED_Y_CNT                         -- 호칭년수
     INTO v_gr_cd         ,
        v_position_fg   ,
        v_rank_fg       ,
        v_rank_y_cnt    ,
        v_ent_ymd       ,
        v_retire_ymd    ,
        v_called_y_cnt
     FROM TB_BGT_BP_EMP                        -- 사업계획사원
     WHERE BP_YY     = v_bp_yy
      AND CENTER_CD = v_center_cd
      AND PLAN_FG   = v_plan_fg
      AND DGR       = v_dgr
      AND EMP_NO    = v_emp_no    ;

    -- 직위 진급년도 검색
    v_promote_year := FC_BGT_PROMOTEYEAR(v_bp_yy       ,
                       v_position_fg ,
                       v_called_y_cnt,
                       v_ent_ymd     );

    -- 직급 진급년도 검색
    v_levelup_year := FC_BGT_LEVELUPYEAR(v_bp_yy       ,
                       v_rank_fg     ,
                       v_rank_y_cnt  );

    return v_levelup_year;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN '9999';
    WHEN OTHERS THEN
      RETURN '9999';

  END FC_BGT_SETMAN;
  /

6. function안에 query 만들어사용
  CREATE OR REPLACE FUNCTION FC_GET_3MONTH_PLAN (
   V_YYYY IN VARCHAR2
  )
  RETURN NUMBER                                               
  IS
   v_3month_plan       NUMBER  := 0;
   plsql VARCHAR2(4000) := NULL;

  BEGIN
   plsql := plsql || ' SELECT SUM(AMOUNT) INTO v_3month_plan';
   plsql := plsql || ' FROM PERI_TEMP';
   plsql := plsql || ' WHERE NO IN (' || V_YYYY || ');';
   EXEC(plsql);
   RETURN v_3month_plan;

  EXCEPTION
   WHEN OTHERS THEN
     RETURN 0;

  END FC_GET_3MONTH_PLAN;
  /

7. for 복합문
  CREATE OR REPLACE FUNCTION FC_PJT_GETEVALER(
    p_pjt_cd       TB_PJT_EVAL_DOC_DETAIL.PJT_CD%TYPE
   , p_eval_dgr     TB_PJT_EVAL_DOC_DETAIL.PJT_EVAL_DGR%TYPE
   , p_eval_lead_fg TB_PJT_EVAL_DOC_DETAIL.EVAL_LEAD_FG%TYPE
  ) RETURN VARCHAR2 

  IS
    l_evaler_unit_nm     varchar2(100)       := ''          
    l_evaler_subtotal_nm varchar2(100)       := ''                               
    l_evaler_total_nm    varchar2(999)       := ''          
    l_gr_max_cnt         number(2)           := 0           
    l_evaler_max_dgr     number(2)           := 0           
    l_no_evaltgt         varchar2(5)         := ''          
    c_no_eval CONSTANT   varchar2(5)         := '00'         
    c_no_evaltgt_nm CONSTANT varchar2(10)    := '평가비대상' 
    ex_noeval          EXCEPTION                            
    
  BEGIN
     -- #######################################################################
     -- 평가자SET수 계산.
     -- #######################################################################
     SELECT MAX(EVAL_GR_SEQ_NO)
     INTO   l_gr_max_cnt
     FROM   TB_PJT_EVAL_DOC_DETAIL
     WHERE  PJT_CD = p_pjt_cd
     AND    PJT_EVAL_DGR = p_eval_dgr
     AND    EVAL_LEAD_FG = p_eval_lead_fg ;
     
     IF l_gr_max_cnt > 0 THEN    -- 평가자SET 존재시 실행.
      -- ####################################################################
      -- 평가자SET수만큼 LOOP
      -- ####################################################################
      <<outer_loop>>
      FOR i IN 1..l_gr_max_cnt
      LOOP        
        -- #################################################################
        -- 평가자 SET별 차수 계산.
        -- #################################################################
        SELECT MAX(EVALER_DGR)
        INTO   l_evaler_max_dgr
        FROM   TB_PJT_EVAL_DOC_DETAIL
        WHERE  PJT_CD = p_pjt_cd
        AND    PJT_EVAL_DGR = p_eval_dgr
        AND    EVAL_LEAD_FG = p_eval_lead_fg 
        AND    EVAL_GR_SEQ_NO = i ;        
        -- ################################################################
        -- 평가자 SET별 차수만큼 LOOP
        -- ################################################################        
        <<inner_loop>>
        FOR j IN 1..l_evaler_max_dgr
        LOOP
          -- #############################################################
          -- 평가비대상PJT > 사용자정의 예외처리
          -- #############################################################
          SELECT EVAL_PROG_STAT_FG
          INTO   l_no_evaltgt
          FROM   TB_PJT_EVAL_DOC_DETAIL
          WHERE  PJT_CD = p_pjt_cd
          AND    PJT_EVAL_DGR = p_eval_dgr
          AND    EVAL_LEAD_FG = p_eval_lead_fg
          AND    EVAL_GR_SEQ_NO = i
          AND    EVALER_DGR = j ;
     
          IF l_no_evaltgt = c_no_eval THEN
           l_evaler_total_nm := c_no_evaltgt_nm ;
           RAISE ex_noeval ;
          END IF ;
          --------- 평가비대상PJT 사용자정의 예외처리 끝. -----------------
        
          SELECT KO_NM
          INTO   l_evaler_unit_nm
          FROM   TB_MAN_EMP A
          WHERE  EMP_NO = (SELECT EVALER_EMP_NO 
              FROM   TB_PJT_EVAL_DOC_DETAIL
              WHERE  PJT_CD = p_pjt_cd    
              AND    EVAL_LEAD_FG = p_eval_lead_fg
              AND    PJT_EVAL_DGR = p_eval_dgr
              AND    EVAL_GR_SEQ_NO = i
              AND    EVALER_DGR = j 
              );
    
          EXIT WHEN SQL%NOTFOUND ;
   
          IF j = 1 THEN
            l_evaler_subtotal_nm := l_evaler_unit_nm ;
          ELSIF j > 1 THEN
            l_evaler_subtotal_nm := l_evaler_subtotal_nm ||', '|| l_evaler_unit_nm ;
          END IF ;

         END LOOP inner_loop;    -- INNER LOOP END.
         
         IF i = 1 THEN
           l_evaler_total_nm := l_evaler_subtotal_nm ;             
         ELSIF i > 1 THEN
           l_evaler_total_nm := l_evaler_total_nm ||' / '|| l_evaler_subtotal_nm ;             
         END IF ;
       END LOOP outer_loop ;    -- OUTER LOOP END.
     ELSE
       l_evaler_total_nm := 'N/A' ;    -- 평가자SET 존재하지않을때 'N/A'로 세팅.
     END IF ;

  RETURN l_evaler_total_nm ;           
     
  EXCEPTION
    WHEN OTHERS THEN
      RETURN l_evaler_total_nm ;

  END FC_PJT_GETEVALER ;
  /

